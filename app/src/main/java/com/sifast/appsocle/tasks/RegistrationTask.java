package com.sifast.appsocle.tasks;


import android.app.Activity;
import android.app.ProgressDialog;
import android.os.AsyncTask;
import android.widget.Toast;

import com.firebase.client.Firebase;
import com.sifast.appsocle.R;
import com.sifast.appsocle.models.User;

import java.util.Arrays;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * Created by Asus on 14/06/2016.
 */
public class RegistrationTask extends AsyncTask {

    private User registeredUser;
    private Activity loginActicity;
    private ProgressDialog progress;
    private String dbUrl;

    public RegistrationTask(User registeredUser, Activity loginAct) {

        this.registeredUser = registeredUser;
        this.loginActicity = loginAct;
        dbUrl = loginAct.getResources().getString(R.string.dbUrl);
    }

    @Override

    protected Object doInBackground(Object[] params) {

        //dialog to say to the user that he must wait
        loginActicity.runOnUiThread(new Runnable() {
            @Override
            public void run() {
                progress = ProgressDialog.show(loginActicity, loginActicity.getBaseContext().getString(R.string.registrationLabel),
                        loginActicity.getBaseContext().getString(R.string.waitMsg), true);
            }
        });
        //add the user
        register();
        loginActicity.runOnUiThread(new Runnable() {
            @Override
            public void run() {
                progress.dismiss();
            }
        });


        return null;
    }

    public void register() {

        Firebase ref = new Firebase(dbUrl);

        // Generate a reference to a new location and add some data using push()
        Firebase postRef = ref.child("users");
        Firebase newPostRef = postRef.push();
// Add some data to the new location
        Map<String, String> post1 = new HashMap<String, String>();
        post1.put("username", registeredUser.getUsername());
        post1.put("password", String.valueOf(registeredUser.getPassword().toString().hashCode()));
        post1.put("dateOfBirth", registeredUser.getDateOfBirth());
        post1.put("signUpDate", registeredUser.getSignUpDate());
        post1.put("email", registeredUser.getEmail());
        newPostRef.setValue(post1);
// Get the unique ID generated by push()
        String postId = newPostRef.getKey();
        //ToDo check the registration date


        String sendTO = registeredUser.getEmail();
        List<String> toEmailList = Arrays.asList(sendTO
                .split("\\s*,\\s*"));
        //set the email's data
        String emailTex = loginActicity.getResources().getString(R.string.emailWelcomeText);
        String email = loginActicity.getResources().getString(R.string.email);
        String passwordMail = loginActicity.getResources().getString(R.string.passwordMail);
        String subject = loginActicity.getResources().getString(R.string.welcomeSubject);
        new MailSendingTask().execute(email, passwordMail, toEmailList, subject, emailTex);
    }

    public User getRegisteredUser() {
        return registeredUser;
    }

    public void setRegisteredUser(User registeredUser) {
        this.registeredUser = registeredUser;
    }

    public Activity getLoginActicity() {
        return loginActicity;
    }

    public void setLoginActicity(Activity loginActicity) {
        this.loginActicity = loginActicity;
    }

    public ProgressDialog getProgress() {
        return progress;
    }

    public void setProgress(ProgressDialog progress) {
        this.progress = progress;
    }

    public String getDbUrl() {
        return dbUrl;
    }

    public void setDbUrl(String dbUrl) {
        this.dbUrl = dbUrl;
    }
}
